{"mappings":"ACAA,IAAI,EAAiB,CACjB,MAAO,GACP,IAAK,EACL,IAAK,GACT,EAEA,OAAO,SAAS,CAAC,UAAU,CAAC,SAAU,CAAS,EAC3C,EAAe,KAAK,CAAG,EAAU,KAAK,CACtC,EAAe,GAAG,CAAG,EAAU,GAAG,CAClC,EAAe,GAAG,CAAG,EAAU,GAAG,CAElC,IAAM,EAAY,SAAS,cAAc,CAAC,kBAC1C,CAAA,EAAU,SAAS,CAAG,GAEtB,IAAM,EAAgB,SAAS,aAAa,CAAC,MAC7C,CAAA,EAAc,SAAS,CAAG,iBAE1B,IAAM,EAAY,SAAS,aAAa,CAAC,MACzC,CAAA,EAAU,SAAS,CAAG,aAEtB,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,aACrB,EAAS,WAAW,CAAG,EAAe,GAAG,CAEzC,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,aACrB,EAAS,WAAW,CAAG,EAAe,GAAG,CAEzC,IAAM,EAAkB,SAAS,aAAa,CAAC,MAC/C,CAAA,EAAgB,SAAS,CAAG,yBAE5B,IAAM,EAAqB,SAAS,aAAa,CAAC,MAClD,CAAA,EAAmB,SAAS,CAAG,uBAE/B,IAAM,EAAc,SAAS,aAAa,CAAC,QAC3C,CAAA,EAAY,IAAI,CAAG,QACnB,EAAY,GAAG,CAAG,EAAe,GAAG,CACpC,EAAY,GAAG,CAAG,EAAe,GAAG,CACpC,EAAY,KAAK,CAAG,EAAe,KAAK,CAExC,IAAM,EAAe,SAAS,aAAa,CAAC,MAC5C,CAAA,EAAa,SAAS,CAAG,eACzB,EAAa,WAAW,CAAG,EAAe,KAAK,CAE/C,IAAM,EAAgB,AAAC,IACnB,IAAM,EAAU,AAAE,CAAA,EAAQ,EAAe,GAAG,AAAH,EAAQ,CAAA,EAAe,GAAG,CAAG,EAAe,GAAE,AAAF,EAAQ,GAC7F,CAAA,EAAa,WAAW,CAAG,EAC3B,EAAY,KAAK,CAAC,UAAU,CAAG,CAAC,kCAAkC,EAAE,EAAQ,QAAQ,EAAE,EAAQ,EAAE,CAAC,CAEjG,sBAAsB,KAElB,IAAM,EAAS,EAAW,IAAO,AADd,EAAY,qBAAqB,GACR,KAAK,AACjD,CAAA,EAAa,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAO,EAAE,CAAC,AAC3C,EACJ,EAEA,EAAY,gBAAgB,CAAC,QAAS,AAAC,IACnC,EAAe,KAAK,CAAG,EAAE,MAAM,CAAC,KAAK,CACrC,EAAc,EAAe,KAAK,CACtC,GAEA,EAAY,gBAAgB,CAAC,SAAU,AAAC,IACpC,EAAe,KAAK,CAAG,EAAE,MAAM,CAAC,KAAK,CACrC,OAAO,SAAS,CAAC,SAAS,CAAC,QAAS,EAAe,KAAK,CAC5D,GAEA,EAAmB,WAAW,CAAC,GAC/B,EAAmB,WAAW,CAAC,GAC/B,EAAgB,WAAW,CAAC,GAE5B,EAAU,WAAW,CAAC,GACtB,EAAU,WAAW,CAAC,GACtB,EAAU,WAAW,CAAC,GAEtB,EAAc,WAAW,CAAC,GAC1B,EAAU,WAAW,CAAC,GAEtB,WAAW,IAAM,EAAc,EAAe,KAAK,EAAG,EAC1D","sources":["<anon>","slider/v1/index.js"],"sourcesContent":["var $00f134245f2d7c03$exports = {};\nlet $00f134245f2d7c03$var$componentState = {\n    input: \"\",\n    min: 0,\n    max: 100\n};\nAppian.Component.onNewValue(function(newValues) {\n    $00f134245f2d7c03$var$componentState.input = newValues.input;\n    $00f134245f2d7c03$var$componentState.min = newValues.min;\n    $00f134245f2d7c03$var$componentState.max = newValues.max;\n    const container = document.getElementById(\"slide-container\");\n    container.innerHTML = \"\";\n    const sliderWrapper = document.createElement(\"div\");\n    sliderWrapper.className = \"slider-wrapper\";\n    const sliderRow = document.createElement(\"div\");\n    sliderRow.className = \"slider-row\";\n    const minLabel = document.createElement(\"div\");\n    minLabel.className = \"slider-min\";\n    minLabel.textContent = $00f134245f2d7c03$var$componentState.min;\n    const maxLabel = document.createElement(\"div\");\n    maxLabel.className = \"slider-max\";\n    maxLabel.textContent = $00f134245f2d7c03$var$componentState.max;\n    const sliderContainer = document.createElement(\"div\");\n    sliderContainer.className = \"slider-track-container\";\n    const sliderThumbWrapper = document.createElement(\"div\");\n    sliderThumbWrapper.className = \"slider-thumb-wrapper\";\n    const rangeSlider = document.createElement(\"input\");\n    rangeSlider.type = \"range\";\n    rangeSlider.min = $00f134245f2d7c03$var$componentState.min;\n    rangeSlider.max = $00f134245f2d7c03$var$componentState.max;\n    rangeSlider.value = $00f134245f2d7c03$var$componentState.input;\n    const valueDisplay = document.createElement(\"div\");\n    valueDisplay.className = \"slider-value\";\n    valueDisplay.textContent = $00f134245f2d7c03$var$componentState.input;\n    const updateVisuals = (value)=>{\n        const percent = (value - $00f134245f2d7c03$var$componentState.min) / ($00f134245f2d7c03$var$componentState.max - $00f134245f2d7c03$var$componentState.min) * 100;\n        valueDisplay.textContent = value;\n        rangeSlider.style.background = `linear-gradient(to right, #007bff ${percent}%, #ddd ${percent}%)`;\n        requestAnimationFrame(()=>{\n            const sliderRect = rangeSlider.getBoundingClientRect();\n            const offset = percent / 100 * sliderRect.width;\n            valueDisplay.style.left = `${offset}px`; // center handled by CSS\n        });\n    };\n    rangeSlider.addEventListener(\"input\", (e)=>{\n        $00f134245f2d7c03$var$componentState.input = e.target.value;\n        updateVisuals($00f134245f2d7c03$var$componentState.input);\n    });\n    rangeSlider.addEventListener(\"change\", (e)=>{\n        $00f134245f2d7c03$var$componentState.input = e.target.value;\n        Appian.Component.saveValue(\"input\", $00f134245f2d7c03$var$componentState.input);\n    });\n    sliderThumbWrapper.appendChild(valueDisplay);\n    sliderThumbWrapper.appendChild(rangeSlider);\n    sliderContainer.appendChild(sliderThumbWrapper);\n    sliderRow.appendChild(minLabel);\n    sliderRow.appendChild(sliderContainer);\n    sliderRow.appendChild(maxLabel);\n    sliderWrapper.appendChild(sliderRow);\n    container.appendChild(sliderWrapper);\n    setTimeout(()=>updateVisuals($00f134245f2d7c03$var$componentState.input), 0);\n});\n\n\n//# sourceMappingURL=v1.bb10b9ad.js.map\n","let componentState = {\r\n    input: \"\",\r\n    min: 0,\r\n    max: 100,\r\n};\r\n\r\nAppian.Component.onNewValue(function (newValues) {\r\n    componentState.input = newValues.input;\r\n    componentState.min = newValues.min;\r\n    componentState.max = newValues.max;\r\n\r\n    const container = document.getElementById(\"slide-container\");\r\n    container.innerHTML = \"\";\r\n\r\n    const sliderWrapper = document.createElement(\"div\");\r\n    sliderWrapper.className = \"slider-wrapper\";\r\n\r\n    const sliderRow = document.createElement(\"div\");\r\n    sliderRow.className = \"slider-row\";\r\n\r\n    const minLabel = document.createElement(\"div\");\r\n    minLabel.className = \"slider-min\";\r\n    minLabel.textContent = componentState.min;\r\n\r\n    const maxLabel = document.createElement(\"div\");\r\n    maxLabel.className = \"slider-max\";\r\n    maxLabel.textContent = componentState.max;\r\n\r\n    const sliderContainer = document.createElement(\"div\");\r\n    sliderContainer.className = \"slider-track-container\";\r\n\r\n    const sliderThumbWrapper = document.createElement(\"div\");\r\n    sliderThumbWrapper.className = \"slider-thumb-wrapper\";\r\n\r\n    const rangeSlider = document.createElement(\"input\");\r\n    rangeSlider.type = \"range\";\r\n    rangeSlider.min = componentState.min;\r\n    rangeSlider.max = componentState.max;\r\n    rangeSlider.value = componentState.input;\r\n\r\n    const valueDisplay = document.createElement(\"div\");\r\n    valueDisplay.className = \"slider-value\";\r\n    valueDisplay.textContent = componentState.input;\r\n\r\n    const updateVisuals = (value) => {\r\n        const percent = ((value - componentState.min) / (componentState.max - componentState.min)) * 100;\r\n        valueDisplay.textContent = value;\r\n        rangeSlider.style.background = `linear-gradient(to right, #007bff ${percent}%, #ddd ${percent}%)`;\r\n\r\n        requestAnimationFrame(() => {\r\n            const sliderRect = rangeSlider.getBoundingClientRect();\r\n            const offset = (percent / 100) * sliderRect.width;\r\n            valueDisplay.style.left = `${offset}px`; // center handled by CSS\r\n        });\r\n    };\r\n\r\n    rangeSlider.addEventListener(\"input\", (e) => {\r\n        componentState.input = e.target.value;\r\n        updateVisuals(componentState.input);\r\n    });\r\n\r\n    rangeSlider.addEventListener(\"change\", (e) => {\r\n        componentState.input = e.target.value;\r\n        Appian.Component.saveValue(\"input\", componentState.input);\r\n    });\r\n\r\n    sliderThumbWrapper.appendChild(valueDisplay);\r\n    sliderThumbWrapper.appendChild(rangeSlider);\r\n    sliderContainer.appendChild(sliderThumbWrapper);\r\n\r\n    sliderRow.appendChild(minLabel);\r\n    sliderRow.appendChild(sliderContainer);\r\n    sliderRow.appendChild(maxLabel);\r\n\r\n    sliderWrapper.appendChild(sliderRow);\r\n    container.appendChild(sliderWrapper);\r\n\r\n    setTimeout(() => updateVisuals(componentState.input), 0);\r\n});\r\n"],"names":["$00f134245f2d7c03$var$componentState","input","min","max","Appian","Component","onNewValue","newValues","container","document","getElementById","innerHTML","sliderWrapper","createElement","className","sliderRow","minLabel","textContent","maxLabel","sliderContainer","sliderThumbWrapper","rangeSlider","type","value","valueDisplay","updateVisuals","percent","style","background","requestAnimationFrame","offset","sliderRect","getBoundingClientRect","width","left","addEventListener","e","target","saveValue","appendChild","setTimeout"],"version":3,"file":"v1.bb10b9ad.js.map"}